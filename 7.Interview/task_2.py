import time

class Stack:

    def __init__(self, stack: list):
        self.stack = stack

    def __iter__(self):
        self.count = -1

    def __next__(self):
        self.count += 1
        if self.count-1 > len(self.stack):
            raise StopIteration
        else:
            return self.stack[self.count]


    def is_empty(self):
        try:
            if self.stack[0]:
                return True
        except:
            return False

    def push(self, el):
        self.stack.append(el)

    def pop(self):
        return self.stack.pop(-1)

    def peek(self):
        return self.stack[-1]

    def size(self):
        return len(self.stack)


if __name__ == '__main__':
    start = time.time()
    stack_ = '[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}'
    # stack_ = '[([])((([[[]]])))]{()}'
    stack = list(stack_)
    count = 0
    a = '{}'
    b = '[]'
    c = '()'
    while count+1 < len(stack):
        count += 1
        z = stack[count-1] + stack[count]
        if a == stack[count-1] + stack[count] or b == stack[count-1] + stack[count] or c == stack[count-1] + stack[count]:
            del stack[count]
            del stack[count-1]
            count = 0

    print(stack)
    print(time.time() - start)




