import time

class Stack:

    def __init__(self, stack=None):
        self.stack = stack

    def __iter__(self):
        self.count = -1
        return self

    def __next__(self):
        if '[]' in self.stack or '{}' in self.stack or '()' in self.stack:
            self.stack = self.stack.replace('[]', '')
            self.stack = self.stack.replace('{}', '')
            self.stack = self.stack.replace('()', '')
        # elif '{}' in self.stack:
        #     self.stack = self.stack.replace('{}', '')
        # elif '()' in self.stack:
        #     self.stack = self.stack.replace('()', '')
        else:
            raise StopIteration

    def is_empty(self):
        try:
            if self.stack[0]:
                return True
        except:
            return False

    def push(self, el):
        self.stack.extend(el)

    def pop(self):
        return self.stack.pop(-1)

    def peek(self):
        return self.stack[-1]

    def size(self):
        return len(self.stack)

    def __str__(self):
        return f'{self.stack}'


if __name__ == '__main__':
    start = time.time()
    stack_ = '[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}[([])((([[[]]])))]{()}'
    # stack_ = '([])'
    # stack = list(stack_)
    #
    x = Stack(stack_)
    # x.push(stack)
    for item in x:
        pass
    print(time.time() - start)



